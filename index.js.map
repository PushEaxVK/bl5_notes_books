{"version":3,"file":"index.js","sources":["../src/js/refs.js","../src/js/markup-tasks.js","../src/js/render-tasks.js","../src/js/local-storage-api.js","../src/main.js"],"sourcesContent":["export const refs = {\n  form: document.querySelector('#task-form'),\n  list: document.querySelector('#task-list'),\n};\n","export function createMarkup(data) {\n  return data.map(createCard).join('');\n}\n\nexport function createCard(singleCard) {\n  return `\n  <li class=\"task-list-item\" data-id=\"${singleCard.id}\">\n      <button class=\"task-list-item-btn\">Delete</button>\n      <h3>${singleCard.name}</h3>\n      <p>${singleCard.description}</p>\n  </li>`;\n}\n","import { refs } from './refs';\n\nexport function renderHTML(html) {\n  refs.list.insertAdjacentHTML('beforeend', html);\n}\n","const STORAGE_KEY = 'cards';\n\nexport function getStorageData() {\n  const data = localStorage.getItem(STORAGE_KEY);\n  if (data) {\n    return JSON.parse(data);\n  } else {\n    return [];\n  }\n}\n\nexport function writeStorageData(data) {\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n}\n","import { nanoid } from 'nanoid';\nimport { refs } from './js/refs';\nimport { createMarkup, createCard } from './js/markup-tasks';\nimport { renderHTML } from './js/render-tasks';\nimport { getStorageData, writeStorageData } from './js/local-storage-api';\n\nlet cards = getStorageData();\n\nrenderHTML(createMarkup(cards));\n\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.list.addEventListener('click', onBtnDelete);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const name = refs.form.elements.taskName.value.trim();\n  const descr = refs.form.elements.taskDescription.value.trim();\n  const cardId = nanoid();\n\n  const card = {\n    name,\n    description: descr,\n    id: cardId,\n  };\n\n  cards.push(card);\n\n  writeStorageData(cards);\n\n  renderHTML(createCard(card));\n\n  refs.form.reset();\n}\n\n/////////////////////////////////////////\n\nfunction onBtnDelete(evt) {\n  if (evt.target.nodeName === 'BUTTON') {\n    const id = evt.target.closest('[data-id]').dataset.id;\n    cards = cards.filter(card => id !== card.id);\n    writeStorageData(cards);\n    refs.list.innerHTML = '';\n    renderHTML(createMarkup(cards));\n  }\n}\n"],"names":["refs","createMarkup","data","createCard","singleCard","renderHTML","html","STORAGE_KEY","getStorageData","writeStorageData","cards","onFormSubmit","onBtnDelete","event","name","descr","cardId","nanoid","card","evt","id"],"mappings":"svBAAO,MAAMA,EAAO,CAClB,KAAM,SAAS,cAAc,YAAY,EACzC,KAAM,SAAS,cAAc,YAAY,CAC3C,ECHO,SAASC,EAAaC,EAAM,CACjC,OAAOA,EAAK,IAAIC,CAAU,EAAE,KAAK,EAAE,CACrC,CAEO,SAASA,EAAWC,EAAY,CACrC,MAAO;AAAA,wCAC+BA,EAAW,EAAE;AAAA;AAAA,YAEzCA,EAAW,IAAI;AAAA,WAChBA,EAAW,WAAW;AAAA,QAEjC,CCTO,SAASC,EAAWC,EAAM,CAC/BN,EAAK,KAAK,mBAAmB,YAAaM,CAAI,CAChD,CCJA,MAAMC,EAAc,QAEb,SAASC,GAAiB,CAC/B,MAAMN,EAAO,aAAa,QAAQK,CAAW,EAC7C,OAAIL,EACK,KAAK,MAAMA,CAAI,EAEf,EAEX,CAEO,SAASO,EAAiBP,EAAM,CACrC,aAAa,QAAQK,EAAa,KAAK,UAAUL,CAAI,CAAC,CACxD,CCPA,IAAIQ,EAAQF,EAAc,EAE1BH,EAAWJ,EAAaS,CAAK,CAAC,EAE9BV,EAAK,KAAK,iBAAiB,SAAUW,CAAY,EACjDX,EAAK,KAAK,iBAAiB,QAASY,CAAW,EAE/C,SAASD,EAAaE,EAAO,CAC3BA,EAAM,eAAc,EAEpB,MAAMC,EAAOd,EAAK,KAAK,SAAS,SAAS,MAAM,OACzCe,EAAQf,EAAK,KAAK,SAAS,gBAAgB,MAAM,OACjDgB,EAASC,IAETC,EAAO,CACX,KAAAJ,EACA,YAAaC,EACb,GAAIC,CACR,EAEEN,EAAM,KAAKQ,CAAI,EAEfT,EAAiBC,CAAK,EAEtBL,EAAWF,EAAWe,CAAI,CAAC,EAE3BlB,EAAK,KAAK,OACZ,CAIA,SAASY,EAAYO,EAAK,CACxB,GAAIA,EAAI,OAAO,WAAa,SAAU,CACpC,MAAMC,EAAKD,EAAI,OAAO,QAAQ,WAAW,EAAE,QAAQ,GACnDT,EAAQA,EAAM,OAAOQ,GAAQE,IAAOF,EAAK,EAAE,EAC3CT,EAAiBC,CAAK,EACtBV,EAAK,KAAK,UAAY,GACtBK,EAAWJ,EAAaS,CAAK,CAAC,CAC/B,CACH"}